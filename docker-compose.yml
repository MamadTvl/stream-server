version: '3'
services:
    prod:
        container_name: stream-server
        image: stream-server:1.0.0
        build:
            context: .
            dockerfile: ./Dockerfile
        networks:
            - encoder
        ports:
            - "1935:${RTMP_PORT}"
            - "3333:${API_PORT}"
            - "8888:${HTTP_PORT}"
        volumes:
            - ./media:/app/media
        restart: unless-stopped
        depends_on:
            - mongodb
        environment:
            - API_PORT=${API_PORT}
            - RTMP_PORT=${RTMP_PORT}
            - HTTP_PORT=${HTTP_PORT}
            - RMTP_BASE_URL=${RMTP_BASE_URL}
            - NODE_ENV=production
            - MONGO_USER=${MONGO_USER}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_HOST=${MONGO_HOST}
            - MONGO_DATABASE=${MONGO_DATABASE}
            - MONGO_PORT=${MONGO_PORT}
            - MONGO_AUTH_SOURCE=${MONGO_AUTH_SOURCE}
            - FFMPEG=${FFMPEG}

    mongodb:
        image: mongo:latest
        container_name: mongodb
        environment:
            - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        volumes:
            - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
            - ./database:/data/db
        networks:
            - encoder
        ports:
            - "27018:27017"
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
networks:
    encoder:
